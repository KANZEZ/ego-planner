<launch>
  <!-- size of map, change the size inflate x, y, z according to your application -->
  <arg name="world_frame_id" default="simulator"/>
  <arg name="mav_name" default="quadrotor"/>
  <arg name="map_size_x" default="40.0"/>
  <arg name="map_size_y" default="40.0"/>
  <arg name="map_size_z" default=" 5.0"/>

  <!-- topic of your odometry such as VIO or LIO -->
  <arg name="odom_topic" default="/quadrotor/odom" />
  <arg name="cmd_topic" default="/quadrotor/position_cmd"/>
  <arg name="waypoints_topic" default="/quadrotor/waypoints"/>
  <arg name="global_map_topic" default="/structure_map/global_cloud"/>

  <!-- main algorithm params -->
  <include file="$(find ego_planner)/launch/advanced_param.xml">
    <arg name="world_frame_id" value="$(arg world_frame_id)"/>
    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="odometry_topic" value="$(arg odom_topic)"/>
    <arg name="waypoints_topic" value="$(arg waypoints_topic)"/>
    <arg name="tracker_topic" value="/$(arg mav_name)/trackers_manager/poly_tracker/PolyTracker/goal"/>
    <arg name="srv_name"  value="/$(arg mav_name)/mav_services/poly_tracker"/>

    <!-- camera pose: transform of camera frame in the world frame -->
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- don't set cloud_topic if you already set these ones! -->
    <arg name="camera_pose_topic" value="pcl_render_node/camera_pose"/>
    <arg name="depth_topic" value="pcl_render_node/depth"/>

    <!-- topic of point cloud measurement, such as from LIDAR  -->
    <!-- don't set camera pose and depth, if you already set this one! -->
    <arg name="cloud_topic" value="pcl_render_node/cloud"/>

    <!-- intrinsic params of the depth camera -->
    <arg name="cx" value="321.04638671875"/>
    <arg name="cy" value="243.44969177246094"/>
    <arg name="fx" value="387.229248046875"/>
    <arg name="fy" value="387.229248046875"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="2.0" />
    <arg name="max_acc" value="2.0" />

    <!--always set to 1.5 times grater than sensing horizen-->
    <arg name="planning_horizon" value="7.5" /> 

    <!-- 1: use 2D Nav Goal to select goal  -->
    <!-- 2: use global waypoints below  -->
    <arg name="flight_type" value="1" />
    
    <!-- global waypoints -->
    <!-- It generates a piecewise min-snap traj passing all waypoints -->
    <arg name="point_num" value="5" />

    <arg name="point0_x" value="-15.0" />
    <arg name="point0_y" value="0.0" />
    <arg name="point0_z" value="1.0" />

    <arg name="point1_x" value="0.0" />
    <arg name="point1_y" value="15.0" />
    <arg name="point1_z" value="1.0" />

    <arg name="point2_x" value="15.0" />
    <arg name="point2_y" value="0.0" />
    <arg name="point2_z" value="1.0" />

    <arg name="point3_x" value="0.0" />
    <arg name="point3_y" value="-15.0" />
    <arg name="point3_z" value="1.0" />

    <arg name="point4_x" value="-15.0" />
    <arg name="point4_y" value="0.0" />
    <arg name="point4_z" value="1.0" />
    
  </include>

  <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node" output="screen">
    <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml" />
    <param name="sensing_horizon"  value="5.0" />
    <param name="sensing_rate"     value="30.0"/>
    <param name="estimation_rate"  value="30.0"/>

    <param name="map/x_size"     value="$(arg map_size_x)"/>
    <param name="map/y_size"     value="$(arg map_size_y)"/>
    <param name="map/z_size"     value="$(arg map_size_z)"/>

    <remap from="~global_map" to="$(arg global_map_topic)"/>
    <remap from="~odometry"   to="$(arg odom_topic)"/>
  </node>

</launch>
